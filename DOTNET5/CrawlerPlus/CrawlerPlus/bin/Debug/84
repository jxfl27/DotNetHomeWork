<!DOCTYPE html>
<html lang="zh-cn">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="referrer" content="origin" />
    
    
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta http-equiv="Cache-Control" content="no-siteapp" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <title>gaorong404 - 博客园</title>
    <link id="favicon" rel="shortcut icon" href="//common.cnblogs.com/favicon.svg" type="image/svg+xml" />
    
    <link rel="stylesheet" href="/css/blog-common.min.css?v=caAedYKpnz341INFIWakIM6r1EP9FIuJg43i9i8zqDQ" />
    <link id="MainCss" rel="stylesheet" href="/skins/blacklowkey/bundle-blacklowkey.min.css?v=4KEmaEFoQ72fond65B4U2Zp59N9fvfGhFFxIzkSj97w" />
    <link type="text/css" rel="stylesheet" href="https://www.cnblogs.com/gaorong/custom.css?v=5coXTkQ6t&#x2B;R4FBmkAHc3SbObFqQ=" />
    <link id="mobile-style" media="only screen and (max-width: 767px)" type="text/css" rel="stylesheet" href="/skins/blacklowkey/bundle-blacklowkey-mobile.min.css?v=cX_jltB7Us4Tw2n_S08_lsTU6B1YdJoNGzly3o8GZ-8" />
    
    <link type="application/rss+xml" rel="alternate" href="https://www.cnblogs.com/gaorong/rss" />
    <link type="application/rsd+xml" rel="EditURI" href="https://www.cnblogs.com/gaorong/rsd.xml" />
    <link type="application/wlwmanifest+xml" rel="wlwmanifest" href="https://www.cnblogs.com/gaorong/wlwmanifest.xml" />
    <script>
        var currentBlogId = 334473;
        var currentBlogApp = 'gaorong';
        var cb_enable_mathjax = false;
        var isLogined = false;
        var isBlogOwner = false;
        var skinName = 'BlackLowKey';
        var visitorUserId = '';
    </script>
    <script src="https://common.cnblogs.com/scripts/jquery-2.2.0.min.js"></script>
    <script src="/js/blog-common.min.js?v=kKx3DBtpvO8r97BzPmHJseQ10fGHkI-ZwMh4FA0eEd0"></script>
    
    
    
</head>
<body class="no-navbar">
    <a name="top"></a> 
    <div id="top_nav" class="navbar navbar-custom">
        <nav id="nav_main" class="navbar-main">
            <ul id="nav_left" class="navbar-list navbar-left">
                <li class="navbar-branding">
                    <a href="https://www.cnblogs.com/" title="开发者的网上家园"><img src="/images/logo.svg?v=R9M0WmLAIPVydmdzE2keuvnjl-bPR7_35oHqtiBzGsM" alt="博客园Logo" /></a>
                </li>
                <li><a href="/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-sitehome')">首页</a></li>
                <li><a href="https://news.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-news')">新闻</a></li>
                <li><a href="https://q.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-q')">博问</a></li>
                <li><a id="nav_brandzone" href="https://brands.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-brands')">专区</a></li>
                <li><a href="https://ing.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-ing')">闪存</a></li>
                <li><a href="https://edu.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-edu')">班级</a></li>
            </ul>
            <ul id="nav_right" class="navbar-list navbar-right">
                <li>
                    <form id="zzk_search" class="navbar-search" action="https://zzk.cnblogs.com/s" method="get">
                        <input name="w" id="zzk_search_input" placeholder="代码改变世界" type="text" tabindex="3" />
                        <button type="submit" id="zzk_search_button">
                            <img src="/images/aggsite/search.svg" alt="搜索" />
                        </button>
                    </form>
                </li>
                <li id="navbar_login_status" class="navbar-list">
                    <a id="navblog-myblog-icon" class="navbar-user-info navbar-blog" href="https://passport.cnblogs.com/GetBlogApplyStatus.aspx" alt="我的博客" title="我的博客">
                        <img id="myblog_icon" class="navbar-icon" src="/images/aggsite/myblog.svg" alt="我的博客" />
                    </a>
                    <a class="navbar-user-info navbar-message navbar-icon-wrapper" href="https://msg.cnblogs.com/" alt="短消息" title="短消息">
                        <img id="msg_icon" class="navbar-icon" src="/images/aggsite/message.svg?v=oS4PkibyMjZ9rGD5XAcLt99uW_s76Javy2up4dbnZNY" alt="短消息" />
                        <span id="msg_count" style="display: none"></span>
                    </a>
                    <div id="user_info" class="navbar-user-info dropdown">
                        <a class="dropdown-button" href="https://home.cnblogs.com/">
                            <img id="user_icon" class="navbar-avatar" src="/images/aggsite/avatar-default.svg" alt="用户头像" />
                        </a>
                        <div class="dropdown-menu">
                            <a id="navblog-myblog-text" href="https://passport.cnblogs.com/GetBlogApplyStatus.aspx">我的博客</a>
                            <a href="https://home.cnblogs.com/">我的园子</a>
                            <a href="https://account.cnblogs.com/settings/account">账号设置</a>
                            <a href="javascript:void(0)" onclick="logout();">退出登录</a>
                        </div>
                    </div>
                    <a class="navbar-anonymous" href="https://account.cnblogs.com/signup/">注册</a>
                    <a class="navbar-anonymous" href="https://account.cnblogs.com/signin/?returnUrl=https://www.cnblogs.com/">登录</a>
                </li>
            </ul>
        </nav>
    </div>

    
    <!--done-->
<div id="home">
<div id="header">
	<div id="blogTitle">
        <a id="lnkBlogLogo" href="https://www.cnblogs.com/gaorong/"><img id="blogLogo" src="/skins/custom/images/logo.gif" alt="返回主页" /></a>		
		
<!--done-->
<h1><a id="Header1_HeaderTitle" class="headermaintitle HeaderMainTitle" href="https://www.cnblogs.com/gaorong/">代码小工</a>
</h1>
<h2>
<a href="https://github.com/gaorong" data-size="large">Follow @gaorong</a>
<div></div>
</h2>




		
	</div><!--end: blogTitle 博客的标题和副标题 -->
	<div id="navigator">
		
<ul id="navList">
<li>
</li>
<li>

</li>
<li>

<a id="blog_nav_newpost" class="menu" href="https://i.cnblogs.com/EditPosts.aspx?opt=1">
新随笔</a>
</li>
<li>
<a id="blog_nav_contact" class="menu" href="https://msg.cnblogs.com/send/gaorong404">
联系</a></li>
<li>
<a id="blog_nav_rss" class="menu" href="javascript:void(0)" data-rss="https://www.cnblogs.com/gaorong/rss/">
订阅</a>
<!--<partial name="./Shared/_XmlLink.cshtml" model="Model" /></li>--></li>
<li>
<a id="blog_nav_admin" class="menu" href="https://i.cnblogs.com/">
管理</a>
</li>
</ul>


		<div class="blogStats">
			<span id="stats_post_count">随笔 - 
43&nbsp; </span>
<span id="stats_article_count">文章 - 
0&nbsp; </span>
<span id="stats-comment_count">评论 - 
30</span>

		</div><!--end: blogStats -->
	</div><!--end: navigator 博客导航栏 -->
</div><!--end: header 头部 -->
<div id="main">
	<div id="mainContent">
	<div class="forFlow">
		





		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/gaorong/archive/2020/06/06.html">2020年6月6日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/gaorong/p/12952398.html">
    <span>
        KMS 加密kubernetes secrets的正确姿势
    </span>
    


</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：背景 在kubernetes中， secrets默认是明文存储在etcd中，具有很大的安全风险，可以配置KMS provider进行加密。但引入KMS provider是否会对apiserver造成影响，需要从性能和可用方面进行仔细考量。 架构 目前kubernetes调用kms进行加解密，我们需要        <a href="https://www.cnblogs.com/gaorong/p/12952398.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-06-06 19:30
gaorong404
<span class="post-view-count">阅读(278)</span><text> </text>
<span class="post-comment-count">评论(0)</span><text> </text>
<span class="post-digg-count">推荐(0)</span><text> </text>
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12952398" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/gaorong/archive/2020/05/24.html">2020年5月24日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/gaorong/p/12951036.html">
    <span>
        LoadBalancer在kubernetes架构下的实践
    </span>
    


</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：Backgound === 借助于kubernetes优秀的弹性扩缩功能，运行其中的应用程序能够在流量突增的时候坦然应对，在流量低谷的时候无需担心成本。但于此同时，也带来了极大的挑战： 弹性扩缩导致容器IP动态变化，客户端无法直接依赖于容器IP进行访问，我们必须通过某种方式固定流量入口，将流量通过该        <a href="https://www.cnblogs.com/gaorong/p/12951036.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-05-24 15:04
gaorong404
<span class="post-view-count">阅读(793)</span><text> </text>
<span class="post-comment-count">评论(0)</span><text> </text>
<span class="post-digg-count">推荐(2)</span><text> </text>
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12951036" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/gaorong/archive/2020/03/08.html">2020年3月8日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/gaorong/p/12443539.html">
    <span>
        容器内init进程方案
    </span>
    


</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：背景 进程标识符 (PID) 是Linux 内核为每个进程提供的唯一标识符。熟悉docker的同学都知道， 所有的进程 PID都属于某一个PID namespaces, 也就是说容器具有一组自己的 PID，这些 PID 映射到主机系统上的 PID。启动Linux内核时启动的第一个进程具有 PID 1        <a href="https://www.cnblogs.com/gaorong/p/12443539.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-03-08 17:55
gaorong404
<span class="post-view-count">阅读(820)</span><text> </text>
<span class="post-comment-count">评论(0)</span><text> </text>
<span class="post-digg-count">推荐(1)</span><text> </text>
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12443539" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/gaorong/archive/2020/02/23.html">2020年2月23日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/gaorong/p/12284888.html">
    <span>
        记一次kubernetes驱逐踩坑
    </span>
    


</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：最近在公司的线上服务器上发现了一个现象： 将某个node的kubelet短暂的停掉之后，其上的pod马上会被驱逐，这让笔者大吃一惊，印象之中，停掉kubelet后，该node会变为 状态，随后controller manger会经过一段时间才开始驱逐其上的pod。还有个参数专门来控制这个时间： po        <a href="https://www.cnblogs.com/gaorong/p/12284888.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-02-23 15:30
gaorong404
<span class="post-view-count">阅读(1054)</span><text> </text>
<span class="post-comment-count">评论(6)</span><text> </text>
<span class="post-digg-count">推荐(0)</span><text> </text>
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12284888" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/gaorong/archive/2020/02/15.html">2020年2月15日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/gaorong/p/12312590.html">
    <span>
        kubernetes中node心跳处理逻辑分析
    </span>
    


</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：最近在查看一个kubernetes集群中node not ready的奇怪现象，顺便阅读了一下kubernetes kube controller manager中管理node健康状态的组件 。我们知道kubernetes是典型的master slave架构，master node负责整个集群元数据        <a href="https://www.cnblogs.com/gaorong/p/12312590.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2020-02-15 19:32
gaorong404
<span class="post-view-count">阅读(781)</span><text> </text>
<span class="post-comment-count">评论(0)</span><text> </text>
<span class="post-digg-count">推荐(0)</span><text> </text>
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12312590" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/gaorong/archive/2019/12/08.html">2019年12月8日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/gaorong/p/11873114.html">
    <span>
        kubectl exec 在kubelet中的处理流程
    </span>
    


</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：基于kuebrnetes v1.17 简单来说，一个完整的streaming请求如下： 客户端 kubectl exec i t ... kube apiserver 向 Kubelet 发送流式请求 /exec/ Kubelet 通过 CRI 接口向 CRI Shim 请求 Exec 的 URL         <a href="https://www.cnblogs.com/gaorong/p/11873114.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2019-12-08 12:07
gaorong404
<span class="post-view-count">阅读(1037)</span><text> </text>
<span class="post-comment-count">评论(0)</span><text> </text>
<span class="post-digg-count">推荐(0)</span><text> </text>
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=11873114" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/gaorong/archive/2019/10/27.html">2019年10月27日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/gaorong/p/11716907.html">
    <span>
        kubernetes kubelet组件中cgroup的层层&quot;戒备&quot;
    </span>
    


</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：cgroup是linux内核中用于实现资源使用限制和统计的模块，docker的风靡一时少不了cgroup等特性的支持。kubernetes作为容器编排引擎，除了借助docker进行容器进程的资源管理外，还提供了一些更加高级的资源管理功能，以提高资源利用率和更加稳定的程序运行环境，其中必然少不了cgr        <a href="https://www.cnblogs.com/gaorong/p/11716907.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2019-10-27 12:01
gaorong404
<span class="post-view-count">阅读(1646)</span><text> </text>
<span class="post-comment-count">评论(0)</span><text> </text>
<span class="post-digg-count">推荐(1)</span><text> </text>
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=11716907" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/gaorong/archive/2019/10/21.html">2019年10月21日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/gaorong/p/11318328.html">
    <span>
        生产环境中的kubernetes 优先级与抢占
    </span>
    


</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：kubernetes 中的抢占功能是调度器比较重要的feature，但是真正使用起来还是比较危险，否则很容易把低优先级的pod给无辜kill。为了提高GPU集群的资源利用率，决定勇于尝试一番该featrue。当然使用之前还是得阅读一下相关的代码做到心里有数，出了问题也方便定位修复。 基本原理 优先级        <a href="https://www.cnblogs.com/gaorong/p/11318328.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2019-10-21 22:48
gaorong404
<span class="post-view-count">阅读(721)</span><text> </text>
<span class="post-comment-count">评论(0)</span><text> </text>
<span class="post-digg-count">推荐(0)</span><text> </text>
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=11318328" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/gaorong/archive/2019/10/20.html">2019年10月20日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/gaorong/p/11710246.html">
    <span>
        阿里terway源码分析
    </span>
    


</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：背景 随着公司业务的发展，底层容器环境也需要在各个区域部署，实现多云架构， 使用各个云厂商提供的CNI插件是k8s多云环境下网络架构的一种高效的解法。我们在阿里云的方案中，便用到了阿里云提供的CNI插件terway。terway所提供的VPC互通的网络方案，方便对接已有的基础设施，同时没有overl        <a href="https://www.cnblogs.com/gaorong/p/11710246.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2019-10-20 21:59
gaorong404
<span class="post-view-count">阅读(3670)</span><text> </text>
<span class="post-comment-count">评论(1)</span><text> </text>
<span class="post-digg-count">推荐(5)</span><text> </text>
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=11710246" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/gaorong/archive/2019/08/13.html">2019年8月13日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2 vertical-middle" href="https://www.cnblogs.com/gaorong/p/11336834.html">
    <span>
        golang timeoutHandler解析及kubernetes中的变种
    </span>
    


</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：Golang里的http request timeout比较简单，但是稍不留心就容易出现错误，最近在kubernetes生产环境中出现了的一个问题让我有机会好好捋一捋golang中关于timeout中的所有相关的东西。 Basic golang中timeout有关的设置， 资料已经比较多， 其中必须        <a href="https://www.cnblogs.com/gaorong/p/11336834.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">posted @ 2019-08-13 11:46
gaorong404
<span class="post-view-count">阅读(1008)</span><text> </text>
<span class="post-comment-count">评论(0)</span><text> </text>
<span class="post-digg-count">推荐(2)</span><text> </text>
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=11336834" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>



<div class="topicListFooter">
    <div id="nav_next_page">
        
    <a href="https://www.cnblogs.com/gaorong/default.html?page=2">
        下一页
    </a>

    </div>    
</div>







	</div><!--end: forFlow -->
	</div><!--end: mainContent 主体内容容器-->
	<div id="sideBar">
		<div id="sideBarMain">
			
<div id="sidebar_ad"></div>
			<div id="blog-calendar" style="display:none"></div><script>loadBlogDefaultCalendar();</script>			
			<div id="leftcontentcontainer">
				<div id="blog-sidecolumn"></div>
                    <script>loadBlogSideColumn();</script>
			</div>			
		</div><!--end: sideBarMain -->
	</div><!--end: sideBar 侧边栏容器 -->
	<div class="clear"></div>
	</div><!--end: main -->
	<div class="clear"></div>
	<div id="footer">
		<!--done-->
Copyright &copy; 2020 gaorong404
<br /><span id="poweredby">Powered by .NET 5.0.0-rc.2.20475.5 on Kubernetes</span>



	</div><!--end: footer -->
</div><!--end: home 自定义的最大容器 -->


    
</body>
</html>
