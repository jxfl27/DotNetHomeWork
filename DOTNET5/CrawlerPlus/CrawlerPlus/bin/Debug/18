<!DOCTYPE html>
<html lang="zh-cn">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="referrer" content="origin" />
    <meta name="description" content="Monitor Ctrl-Break线程这个在idea中特有的线程，你了解吗？这线程可能会在你调试的时候给你带来谜一样的结果，为什么呢？请看下面的例子： 首先我们先复习一下多线程的状态（因为这个问题是" />
    <meta property="og:description" content="Monitor Ctrl-Break线程这个在idea中特有的线程，你了解吗？这线程可能会在你调试的时候给你带来谜一样的结果，为什么呢？请看下面的例子： 首先我们先复习一下多线程的状态（因为这个问题是" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta http-equiv="Cache-Control" content="no-siteapp" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <title>Monitor Ctrl-Break线程，有点坑 - 常温的冰 - 博客园</title>
    <link id="favicon" rel="shortcut icon" href="//common.cnblogs.com/favicon.svg" type="image/svg+xml" />
    
    <link rel="stylesheet" href="/css/blog-common.min.css?v=caAedYKpnz341INFIWakIM6r1EP9FIuJg43i9i8zqDQ" />
    <link id="MainCss" rel="stylesheet" href="/skins/codinglife/bundle-codinglife.min.css?v=dij5UHLPkhCwoV5SpUeOW7BnKC0vZ5-8GYi-drRcxLA" />
    
    <link id="mobile-style" media="only screen and (max-width: 767px)" type="text/css" rel="stylesheet" href="/skins/codinglife/bundle-codinglife-mobile.min.css?v=JtOonyglmq10yOLdtvmh-WsVtFwm8HRB8mR_g_TGArQ" />
    
    <link type="application/rss+xml" rel="alternate" href="https://www.cnblogs.com/hpdblogs/rss" />
    <link type="application/rsd+xml" rel="EditURI" href="https://www.cnblogs.com/hpdblogs/rsd.xml" />
    <link type="application/wlwmanifest+xml" rel="wlwmanifest" href="https://www.cnblogs.com/hpdblogs/wlwmanifest.xml" />
    <script>
        var currentBlogId = 585972;
        var currentBlogApp = 'hpdblogs';
        var cb_enable_mathjax = false;
        var isLogined = false;
        var isBlogOwner = false;
        var skinName = 'CodingLife';
        var visitorUserId = '';
    </script>
        <script>
            var currentPostDateAdded = '2020-10-26 08:25';
        </script>
    <script src="https://common.cnblogs.com/scripts/jquery-2.2.0.min.js"></script>
    <script src="/js/blog-common.min.js?v=kKx3DBtpvO8r97BzPmHJseQ10fGHkI-ZwMh4FA0eEd0"></script>
    
    
    
</head>
<body class="has-navbar">
    <a name="top"></a> 
    <div id="top_nav" class="navbar">
        <nav id="nav_main" class="navbar-main">
            <ul id="nav_left" class="navbar-list navbar-left">
                <li class="navbar-branding">
                    <a href="https://www.cnblogs.com/" title="开发者的网上家园"><img src="/images/logo.svg?v=R9M0WmLAIPVydmdzE2keuvnjl-bPR7_35oHqtiBzGsM" alt="博客园Logo" /></a>
                </li>
                <li><a href="/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-sitehome')">首页</a></li>
                <li><a href="https://news.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-news')">新闻</a></li>
                <li><a href="https://q.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-q')">博问</a></li>
                <li><a id="nav_brandzone" href="https://brands.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-brands')">专区</a></li>
                <li><a href="https://ing.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-ing')">闪存</a></li>
                <li><a href="https://edu.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-edu')">班级</a></li>
            </ul>
            <ul id="nav_right" class="navbar-list navbar-right">
                <li>
                    <form id="zzk_search" class="navbar-search" action="https://zzk.cnblogs.com/s" method="get">
                        <input name="w" id="zzk_search_input" placeholder="代码改变世界" type="text" tabindex="3" />
                        <button type="submit" id="zzk_search_button">
                            <img src="/images/aggsite/search.svg" alt="搜索" />
                        </button>
                    </form>
                </li>
                <li id="navbar_login_status" class="navbar-list">
                    <a id="navblog-myblog-icon" class="navbar-user-info navbar-blog" href="https://passport.cnblogs.com/GetBlogApplyStatus.aspx" alt="我的博客" title="我的博客">
                        <img id="myblog_icon" class="navbar-icon" src="/images/aggsite/myblog.svg" alt="我的博客" />
                    </a>
                    <a class="navbar-user-info navbar-message navbar-icon-wrapper" href="https://msg.cnblogs.com/" alt="短消息" title="短消息">
                        <img id="msg_icon" class="navbar-icon" src="/images/aggsite/message.svg?v=oS4PkibyMjZ9rGD5XAcLt99uW_s76Javy2up4dbnZNY" alt="短消息" />
                        <span id="msg_count" style="display: none"></span>
                    </a>
                    <div id="user_info" class="navbar-user-info dropdown">
                        <a class="dropdown-button" href="https://home.cnblogs.com/">
                            <img id="user_icon" class="navbar-avatar" src="/images/aggsite/avatar-default.svg" alt="用户头像" />
                        </a>
                        <div class="dropdown-menu">
                            <a id="navblog-myblog-text" href="https://passport.cnblogs.com/GetBlogApplyStatus.aspx">我的博客</a>
                            <a href="https://home.cnblogs.com/">我的园子</a>
                            <a href="https://account.cnblogs.com/settings/account">账号设置</a>
                            <a href="javascript:void(0)" onclick="logout();">退出登录</a>
                        </div>
                    </div>
                    <a class="navbar-anonymous" href="https://account.cnblogs.com/signup/">注册</a>
                    <a class="navbar-anonymous" href="https://account.cnblogs.com/signin/?returnUrl=https://www.cnblogs.com/">登录</a>
                </li>
            </ul>
        </nav>
    </div>

    
    <!--done-->
<div id="home">
<div id="header">
	<div id="blogTitle">
        <a id="lnkBlogLogo" href="https://www.cnblogs.com/hpdblogs/"><img id="blogLogo" src="/skins/custom/images/logo.gif" alt="返回主页" /></a>		
		
<!--done-->
<h1><a id="Header1_HeaderTitle" class="headermaintitle HeaderMainTitle" href="https://www.cnblogs.com/hpdblogs/">常温的冰</a>
</h1>
<h2>

</h2>




		
	</div><!--end: blogTitle 博客的标题和副标题 -->
	<div id="navigator">
		
<ul id="navList">
<li><a id="blog_nav_sitehome" class="menu" href="https://www.cnblogs.com/">
博客园</a>
</li>
<li>
<a id="blog_nav_myhome" class="menu" href="https://www.cnblogs.com/hpdblogs/">
首页</a>
</li>
<li>

<a id="blog_nav_newpost" class="menu" href="https://i.cnblogs.com/EditPosts.aspx?opt=1">
新随笔</a>
</li>
<li>
<a id="blog_nav_contact" class="menu" href="https://msg.cnblogs.com/send/%E5%B8%B8%E6%B8%A9%E7%9A%84%E5%86%B0">
联系</a></li>
<li>
<a id="blog_nav_rss" class="menu" href="javascript:void(0)" data-rss="https://www.cnblogs.com/hpdblogs/rss/">
订阅</a>
<!--<partial name="./Shared/_XmlLink.cshtml" model="Model" /></li>--></li>
<li>
<a id="blog_nav_admin" class="menu" href="https://i.cnblogs.com/">
管理</a>
</li>
</ul>


		<div class="blogStats">
			<span id="stats_post_count">随笔 - 
27&nbsp; </span>
<span id="stats_article_count">文章 - 
0&nbsp; </span>
<span id="stats-comment_count">评论 - 
0</span>

		</div><!--end: blogStats -->
	</div><!--end: navigator 博客导航栏 -->
</div><!--end: header 头部 -->
<div id="main">
	<div id="mainContent">
	<div class="forFlow">
		<div id="post_detail">
    <!--done-->
    <div id="topics">
        <div class="post">
            <h1 class = "postTitle">
                
<a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/hpdblogs/p/13876624.html">
    <span>Monitor Ctrl-Break线程，有点坑</span>
    


</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                
<div id="cnblogs_post_body" class="blogpost-body">
    <p>Monitor Ctrl-Break线程这个在idea中特有的线程，你了解吗？这线程可能会在你调试的时候给你带来谜一样的结果，为什么呢？请看下面的例子：</p>
<p>首先我们先复习一下多线程的状态（因为这个问题是我在复习多线程的时候发现的问题）</p>
<p>对于线程的所有状态该如何去查看呢？线程的状态都是怎么产生的这些面试高频题目，我们是否还记得呢？下面附上代码用代码再一次复习一下，简单明了。</p>
<p><img src="https://img2020.cnblogs.com/blog/1970848/202010/1970848-20201026081906814-402887787.png" alt="" loading="lazy"></p>
<p>下面是全部的代码：</p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 128, 128, 1)">  1</span> <span style="color: rgba(0, 128, 0, 1)">/**</span>
<span style="color: rgba(0, 128, 128, 1)">  2</span> <span style="color: rgba(0, 128, 0, 1)"> * @Description: 查看线程的所有状态
</span><span style="color: rgba(0, 128, 128, 1)">  3</span> <span style="color: rgba(0, 128, 0, 1)"> * @ProjectName: demo
</span><span style="color: rgba(0, 128, 128, 1)">  4</span> <span style="color: rgba(0, 128, 0, 1)"> * @Package: com.thread
</span><span style="color: rgba(0, 128, 128, 1)">  5</span> <span style="color: rgba(0, 128, 0, 1)"> * @Author: XiaoHeMa
</span><span style="color: rgba(0, 128, 128, 1)">  6</span> <span style="color: rgba(0, 128, 0, 1)"> * @CreateDate: 2020/10/24 9:03
</span><span style="color: rgba(0, 128, 128, 1)">  7</span>  <span style="color: rgba(0, 128, 0, 1)">*/</span>
<span style="color: rgba(0, 128, 128, 1)">  8</span> 
<span style="color: rgba(0, 128, 128, 1)">  9</span> <span style="color: rgba(0, 0, 255, 1)">public</span> <span style="color: rgba(0, 0, 255, 1)">class</span><span style="color: rgba(0, 0, 0, 1)"> ThreadSate {
</span><span style="color: rgba(0, 128, 128, 1)"> 10</span> 
<span style="color: rgba(0, 128, 128, 1)"> 11</span>  
<span style="color: rgba(0, 128, 128, 1)"> 12</span> 
<span style="color: rgba(0, 128, 128, 1)"> 13</span>     <span style="color: rgba(0, 0, 255, 1)">public</span> <span style="color: rgba(0, 0, 255, 1)">static</span> <span style="color: rgba(0, 0, 255, 1)">void</span><span style="color: rgba(0, 0, 0, 1)"> main(String[] args) {
</span><span style="color: rgba(0, 128, 128, 1)"> 14</span> 
<span style="color: rgba(0, 128, 128, 1)"> 15</span>         Thread thread = <span style="color: rgba(0, 0, 255, 1)">new</span> Thread(() -&gt;<span style="color: rgba(0, 0, 0, 1)"> {
</span><span style="color: rgba(0, 128, 128, 1)"> 16</span> 
<span style="color: rgba(0, 128, 128, 1)"> 17</span>             <span style="color: rgba(0, 0, 255, 1)">for</span> (<span style="color: rgba(0, 0, 255, 1)">int</span> i = 0; i &lt; 5; i++<span style="color: rgba(0, 0, 0, 1)">) {
</span><span style="color: rgba(0, 128, 128, 1)"> 18</span> 
<span style="color: rgba(0, 128, 128, 1)"> 19</span>                 <span style="color: rgba(0, 0, 255, 1)">try</span><span style="color: rgba(0, 0, 0, 1)"> {
</span><span style="color: rgba(0, 128, 128, 1)"> 20</span> 
<span style="color: rgba(0, 128, 128, 1)"> 21</span>                     Thread.sleep(100<span style="color: rgba(0, 0, 0, 1)">);
</span><span style="color: rgba(0, 128, 128, 1)"> 22</span> 
<span style="color: rgba(0, 128, 128, 1)"> 23</span>                 } <span style="color: rgba(0, 0, 255, 1)">catch</span><span style="color: rgba(0, 0, 0, 1)"> (InterruptedException e) {
</span><span style="color: rgba(0, 128, 128, 1)"> 24</span> 
<span style="color: rgba(0, 128, 128, 1)"> 25</span> <span style="color: rgba(0, 0, 0, 1)">                    e.printStackTrace();
</span><span style="color: rgba(0, 128, 128, 1)"> 26</span> 
<span style="color: rgba(0, 128, 128, 1)"> 27</span> <span style="color: rgba(0, 0, 0, 1)">                }
</span><span style="color: rgba(0, 128, 128, 1)"> 28</span> 
<span style="color: rgba(0, 128, 128, 1)"> 29</span> <span style="color: rgba(0, 0, 0, 1)">            }
</span><span style="color: rgba(0, 128, 128, 1)"> 30</span> 
<span style="color: rgba(0, 128, 128, 1)"> 31</span>             System.out.println("---thread线程结束---"<span style="color: rgba(0, 0, 0, 1)">);
</span><span style="color: rgba(0, 128, 128, 1)"> 32</span> 
<span style="color: rgba(0, 128, 128, 1)"> 33</span> <span style="color: rgba(0, 0, 0, 1)">        });
</span><span style="color: rgba(0, 128, 128, 1)"> 34</span> 
<span style="color: rgba(0, 128, 128, 1)"> 35</span>         <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">查看线程的状态</span>
<span style="color: rgba(0, 128, 128, 1)"> 36</span> 
<span style="color: rgba(0, 128, 128, 1)"> 37</span>         Thread.State state =<span style="color: rgba(0, 0, 0, 1)"> thread.getState();
</span><span style="color: rgba(0, 128, 128, 1)"> 38</span> 
<span style="color: rgba(0, 128, 128, 1)"> 39</span>         <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">这时候我们只是创建了个线程 也就是NEW的状态</span>
<span style="color: rgba(0, 128, 128, 1)"> 40</span> 
<span style="color: rgba(0, 128, 128, 1)"> 41</span>         System.out.println("线程状态  " +<span style="color: rgba(0, 0, 0, 1)"> state);
</span><span style="color: rgba(0, 128, 128, 1)"> 42</span> 
<span style="color: rgba(0, 128, 128, 1)"> 43</span>         <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">启动线程</span>
<span style="color: rgba(0, 128, 128, 1)"> 44</span> 
<span style="color: rgba(0, 128, 128, 1)"> 45</span> <span style="color: rgba(0, 0, 0, 1)">        thread.start();
</span><span style="color: rgba(0, 128, 128, 1)"> 46</span> 
<span style="color: rgba(0, 128, 128, 1)"> 47</span>         <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">查看线程的状态</span>
<span style="color: rgba(0, 128, 128, 1)"> 48</span> 
<span style="color: rgba(0, 128, 128, 1)"> 49</span>         state =<span style="color: rgba(0, 0, 0, 1)"> thread.getState();
</span><span style="color: rgba(0, 128, 128, 1)"> 50</span> 
<span style="color: rgba(0, 128, 128, 1)"> 51</span>         <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">这时候我们已经启动了线程，然后来看看现在线程的状态 RUNNABLE</span>
<span style="color: rgba(0, 128, 128, 1)"> 52</span> 
<span style="color: rgba(0, 128, 128, 1)"> 53</span>         System.out.println("线程状态  " +<span style="color: rgba(0, 0, 0, 1)"> state);
</span><span style="color: rgba(0, 128, 128, 1)"> 54</span> 
<span style="color: rgba(0, 128, 128, 1)"> 55</span>  
<span style="color: rgba(0, 128, 128, 1)"> 56</span> 
<span style="color: rgba(0, 128, 128, 1)"> 57</span>  
<span style="color: rgba(0, 128, 128, 1)"> 58</span> 
<span style="color: rgba(0, 128, 128, 1)"> 59</span>  
<span style="color: rgba(0, 128, 128, 1)"> 60</span> 
<span style="color: rgba(0, 128, 128, 1)"> 61</span>           <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">根据线程的状态来停止死循环
</span><span style="color: rgba(0, 128, 128, 1)"> 62</span> 
<span style="color: rgba(0, 128, 128, 1)"> 63</span> <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">        while (state != Thread.State.TERMINATED) {
</span><span style="color: rgba(0, 128, 128, 1)"> 64</span> 
<span style="color: rgba(0, 128, 128, 1)"> 65</span> <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">            try {
</span><span style="color: rgba(0, 128, 128, 1)"> 66</span> 
<span style="color: rgba(0, 128, 128, 1)"> 67</span> <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">                Thread.sleep(200);
</span><span style="color: rgba(0, 128, 128, 1)"> 68</span> 
<span style="color: rgba(0, 128, 128, 1)"> 69</span> <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">            } catch (InterruptedException e) {
</span><span style="color: rgba(0, 128, 128, 1)"> 70</span> 
<span style="color: rgba(0, 128, 128, 1)"> 71</span> <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">                e.printStackTrace();
</span><span style="color: rgba(0, 128, 128, 1)"> 72</span> 
<span style="color: rgba(0, 128, 128, 1)"> 73</span> <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">            }
</span><span style="color: rgba(0, 128, 128, 1)"> 74</span> 
<span style="color: rgba(0, 128, 128, 1)"> 75</span> <span style="color: rgba(0, 128, 0, 1)">//</span>            <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">查看线程的状态
</span><span style="color: rgba(0, 128, 128, 1)"> 76</span> 
<span style="color: rgba(0, 128, 128, 1)"> 77</span> <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">            state = thread.getState();
</span><span style="color: rgba(0, 128, 128, 1)"> 78</span> 
<span style="color: rgba(0, 128, 128, 1)"> 79</span> <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">            System.out.println("线程状态  " + state);
</span><span style="color: rgba(0, 128, 128, 1)"> 80</span> 
<span style="color: rgba(0, 128, 128, 1)"> 81</span> <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">        }
</span><span style="color: rgba(0, 128, 128, 1)"> 82</span> 
<span style="color: rgba(0, 128, 128, 1)"> 83</span>  
<span style="color: rgba(0, 128, 128, 1)"> 84</span> 
<span style="color: rgba(0, 128, 128, 1)"> 85</span>  
<span style="color: rgba(0, 128, 128, 1)"> 86</span> 
<span style="color: rgba(0, 128, 128, 1)"> 87</span>         <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">根据线程的总条数来停止死循环</span>
<span style="color: rgba(0, 128, 128, 1)"> 88</span> 
<span style="color: rgba(0, 128, 128, 1)"> 89</span>         <span style="color: rgba(0, 0, 255, 1)">while</span> (<span style="color: rgba(0, 0, 255, 1)">true</span><span style="color: rgba(0, 0, 0, 1)">) {
</span><span style="color: rgba(0, 128, 128, 1)"> 90</span> 
<span style="color: rgba(0, 128, 128, 1)"> 91</span>             <span style="color: rgba(0, 0, 255, 1)">int</span> i =<span style="color: rgba(0, 0, 0, 1)"> Thread.activeCount();
</span><span style="color: rgba(0, 128, 128, 1)"> 92</span> 
<span style="color: rgba(0, 128, 128, 1)"> 93</span>             System.out.println("目前线程数量：" +<span style="color: rgba(0, 0, 0, 1)"> i);
</span><span style="color: rgba(0, 128, 128, 1)"> 94</span> 
<span style="color: rgba(0, 128, 128, 1)"> 95</span>             <span style="color: rgba(0, 128, 0, 1)">/**</span>
<span style="color: rgba(0, 128, 128, 1)"> 96</span> <span style="color: rgba(0, 128, 0, 1)">             * Monitor Ctrl-Break这个线程只会在IDEA中被打印出来
</span><span style="color: rgba(0, 128, 128, 1)"> 97</span> <span style="color: rgba(0, 128, 0, 1)">             * 在IDEA中通过debug启动的不会出现，只有run启动的会出现
</span><span style="color: rgba(0, 128, 128, 1)"> 98</span> <span style="color: rgba(0, 128, 0, 1)">             * 所以在idea中执行run的时候这个要写成2而不能是1在eclipse
</span><span style="color: rgba(0, 128, 128, 1)"> 99</span> <span style="color: rgba(0, 128, 0, 1)">             * 中却不会出现这个问题，这是软件引起的在开发调试过程要注意。
</span><span style="color: rgba(0, 128, 128, 1)">100</span>              <span style="color: rgba(0, 128, 0, 1)">*/</span>
<span style="color: rgba(0, 128, 128, 1)">101</span> 
<span style="color: rgba(0, 128, 128, 1)">102</span>             <span style="color: rgba(0, 0, 255, 1)">if</span> (i == 2<span style="color: rgba(0, 0, 0, 1)">) {
</span><span style="color: rgba(0, 128, 128, 1)">103</span> 
<span style="color: rgba(0, 128, 128, 1)">104</span>                 <span style="color: rgba(0, 0, 255, 1)">break</span><span style="color: rgba(0, 0, 0, 1)">;
</span><span style="color: rgba(0, 128, 128, 1)">105</span> 
<span style="color: rgba(0, 128, 128, 1)">106</span> <span style="color: rgba(0, 0, 0, 1)">            }
</span><span style="color: rgba(0, 128, 128, 1)">107</span> 
<span style="color: rgba(0, 128, 128, 1)">108</span>             <span style="color: rgba(0, 0, 255, 1)">try</span><span style="color: rgba(0, 0, 0, 1)"> {
</span><span style="color: rgba(0, 128, 128, 1)">109</span> 
<span style="color: rgba(0, 128, 128, 1)">110</span>                 Thread.sleep(200<span style="color: rgba(0, 0, 0, 1)">);
</span><span style="color: rgba(0, 128, 128, 1)">111</span> 
<span style="color: rgba(0, 128, 128, 1)">112</span>             } <span style="color: rgba(0, 0, 255, 1)">catch</span><span style="color: rgba(0, 0, 0, 1)"> (InterruptedException e) {
</span><span style="color: rgba(0, 128, 128, 1)">113</span> 
<span style="color: rgba(0, 128, 128, 1)">114</span> <span style="color: rgba(0, 0, 0, 1)">                e.printStackTrace();
</span><span style="color: rgba(0, 128, 128, 1)">115</span> 
<span style="color: rgba(0, 128, 128, 1)">116</span> <span style="color: rgba(0, 0, 0, 1)">            }
</span><span style="color: rgba(0, 128, 128, 1)">117</span> 
<span style="color: rgba(0, 128, 128, 1)">118</span>             <span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">查看线程的状态</span>
<span style="color: rgba(0, 128, 128, 1)">119</span> 
<span style="color: rgba(0, 128, 128, 1)">120</span>             state =<span style="color: rgba(0, 0, 0, 1)"> thread.getState();
</span><span style="color: rgba(0, 128, 128, 1)">121</span> 
<span style="color: rgba(0, 128, 128, 1)">122</span>             System.out.println("线程状态  " +<span style="color: rgba(0, 0, 0, 1)"> state);
</span><span style="color: rgba(0, 128, 128, 1)">123</span> 
<span style="color: rgba(0, 128, 128, 1)">124</span> <span style="color: rgba(0, 0, 0, 1)">        }
</span><span style="color: rgba(0, 128, 128, 1)">125</span> 
<span style="color: rgba(0, 128, 128, 1)">126</span>  
<span style="color: rgba(0, 128, 128, 1)">127</span> 
<span style="color: rgba(0, 128, 128, 1)">128</span>  
<span style="color: rgba(0, 128, 128, 1)">129</span> 
<span style="color: rgba(0, 128, 128, 1)">130</span> <span style="color: rgba(0, 0, 0, 1)">    }
</span><span style="color: rgba(0, 128, 128, 1)">131</span> 
<span style="color: rgba(0, 128, 128, 1)">132</span> }</pre>
</div>
<p>结果：<img src="https://img2020.cnblogs.com/blog/1970848/202010/1970848-20201026082039104-558114390.png" alt="" loading="lazy"></p>
<p>&nbsp;</p>
<p>对于代码中有检验的方式：一种是</p>
<pre>Thread.State.TERMINATED</pre>
<p>采用线程的状态来判断线程是否结束</p>
<p>另一种是通过线程的数量来判断线程的数量</p>
<pre>Thread.activeCount()</pre>
<p>注意（使用idea的小伙伴要注意了，在idea中使用</p>
<pre>Thread.activeCount()</pre>
<p>debug启动的不会出现，只有run启动的会出现，出现线程数最后有2条的问题，所以在上面的代码中才用</p>
<div class="cnblogs_Highlighter">
<pre class="brush:java;gutter:true;">if (i == 2) {
  break;
}</pre>
</div>
<p>）</p>
<p>&nbsp;<img src="https://img2020.cnblogs.com/blog/1970848/202010/1970848-20201026082203349-642783430.png" alt="" loading="lazy"></p>
<p>&nbsp;</p>
<p>Monitor Ctrl-Break线程是在idea中才有的，而且还是要用run启动方式，所以在写测试代码的小伙伴要注意了！！！</p>
<p>测试代码</p>
<div class="cnblogs_Highlighter">
<pre class="brush:java;gutter:true;">public class Main extends Thread {
    public static void main(String[] args) {
        Main t1 = new Main();
        t1.setName("thread01");
        t1.start();
        ThreadGroup currentGroup =
                Thread.currentThread().getThreadGroup();
        int noThreads = currentGroup.activeCount();
        Thread[] lstThreads = new Thread[noThreads];
        currentGroup.enumerate(lstThreads);
        for (int i = 0; i &lt; noThreads; i++) {
            System.out.println("线程号：" + i + " = " + lstThreads[i].getName());
        }
    }
}
</pre>
</div>
<p>　　</p>
<p><img src="https://img2020.cnblogs.com/blog/1970848/202010/1970848-20201026082431512-1572550800.png" alt="" loading="lazy"></p>
<p>&nbsp;</p>
</div>
<div id="MySignature"></div>
<div class="clear"></div>
<div id="blog_post_info_block">
    <div id="blog_post_info"></div>
    <div class="clear"></div>
    <div id="post_next_prev"></div>
</div>
            </div>
            <div class="postDesc">posted @ 
<span id="post-date">2020-10-26 08:25</span>&nbsp;
<a href="https://www.cnblogs.com/hpdblogs/">常温的冰</a>&nbsp;
阅读(<span id="post_view_count">0</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=13876624" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(13876624);return false;">收藏</a></div>
        </div>
	    
	    
    </div><!--end: topics 文章、评论容器-->
</div>
<script src="https://common.cnblogs.com/highlight/10.3.1/highlight.min.js"></script>
<script>markdown_highlight();</script>
<script>
    var allowComments = true, cb_blogId = 585972, cb_blogApp = 'hpdblogs', cb_blogUserGuid = 'abc4ef7f-0b49-4c45-5bbc-08d7c32fed31';
    var cb_entryId = 13876624, cb_entryCreatedDate = '2020-10-26 08:25', cb_postType = 1;
    loadViewCount(cb_entryId);
</script>
<a name="!comments"></a>
<div id="blog-comments-placeholder"></div>
<div id="comment_form" class="commentform">
    <a name="commentform"></a>
    <div id="divCommentShow"></div>
    <div id="comment_nav"><span id="span_refresh_tips"></span><a href="javascript:void(0);" onclick="return RefreshCommentList();" id="lnk_RefreshComments" runat="server" clientidmode="Static">刷新评论</a><a href="#" onclick="return RefreshPage();">刷新页面</a><a href="#top">返回顶部</a></div>
    <div id="comment_form_container"></div>
    <div class="ad_text_commentbox" id="ad_text_under_commentbox"></div>
    <div id="ad_t2"></div>
    <div id="opt_under_post"></div>
    <div id="cnblogs_c1" class="c_ad_block">
        <div id='div-gpt-ad-1592365906576-0' style='width: 300px; height: 250px;'></div>
    </div>
    <div id="under_post_news"></div>
    <div id="cnblogs_c2" class="c_ad_block">
        <div id='div-gpt-ad-1592366332455-0' style='width: 468px; height: 60px;'></div>
    </div>
    <div id="under_post_kb"></div>
    <div id="HistoryToday" class="c_ad_block"></div>
    <script type="text/javascript">
       var commentManager = new blogCommentManager();
       commentManager.renderComments(0);
       fixPostBody();
       deliverBigBanner();
setTimeout(function() { incrementViewCount(cb_entryId); }, 50);       deliverT2();
       deliverC1C2();
       loadNewsAndKb();
       loadBlogSignature();
LoadPostCategoriesTags(cb_blogId, cb_entryId);       LoadPostInfoBlock(cb_blogId, cb_entryId, cb_blogApp, cb_blogUserGuid);
       GetPrevNextPost(cb_entryId, cb_blogId, cb_entryCreatedDate, cb_postType);
       loadOptUnderPost();
       GetHistoryToday(cb_blogId, cb_blogApp, cb_entryCreatedDate);
   </script>
</div>

	</div><!--end: forFlow -->
	</div><!--end: mainContent 主体内容容器-->
	<div id="sideBar">
		<div id="sideBarMain">
			<div id="sidebar_news" class="newsItem">
            <script>loadBlogNews();</script>
</div>
<div id="sidebar_ad"></div>
			<div id="blog-calendar" style="display:none"></div><script>loadBlogDefaultCalendar();</script>			
			<div id="leftcontentcontainer">
				<div id="blog-sidecolumn"></div>
                    <script>loadBlogSideColumn();</script>
			</div>			
		</div><!--end: sideBarMain -->
	</div><!--end: sideBar 侧边栏容器 -->
	<div class="clear"></div>
	</div><!--end: main -->
	<div class="clear"></div>
	<div id="footer">
		<!--done-->
Copyright &copy; 2020 常温的冰
<br /><span id="poweredby">Powered by .NET 5.0.0-rc.2.20475.5 on Kubernetes</span>



	</div><!--end: footer -->
</div><!--end: home 自定义的最大容器 -->


    
</body>
</html>
